(THU.CST) os is loading ...

Special kernel symbols:
  entry  0xc0100036 (phys)
  etext  0xc010d737 (phys)
  edata  0xc01c5000 (phys)
  end    0xc01c82c4 (phys)
Kernel executable memory footprint: 801KB
ebp:c0130f38 eip:c0100af0 args: 0x00010094 0x00000000 0xc0130f68 0xc01000e4 
    kern/debug/kdebug.c:351: print_stackframe+21
ebp:c0130f48 eip:c0100deb args: 0x00000000 0x00000000 0x00000000 0xc0130fb8 
    kern/debug/kmonitor.c:129: mon_backtrace+10
ebp:c0130f68 eip:c01000e4 args: 0x00000000 0xc0130f90 0xffff0000 0xc0130f94 
    kern/init/init.c:59: grade_backtrace2+33
ebp:c0130f88 eip:c010010d args: 0x00000000 0xffff0000 0xc0130fb4 0x0000002a 
    kern/init/init.c:64: grade_backtrace1+38
ebp:c0130fa8 eip:c010012b args: 0x00000000 0xc0100036 0xffff0000 0x0000001d 
    kern/init/init.c:69: grade_backtrace0+23
ebp:c0130fc8 eip:c0100150 args: 0xc010d75c 0xc010d740 0x000032c4 0x00000000 
    kern/init/init.c:74: grade_backtrace+34
ebp:c0130ff8 eip:c010008b args: 0xc010d8ec 0xc010d8f4 0xc0100d71 0xc010d913 
    kern/init/init.c:33: kern_init+84
memory management: default_pmm_manager
e820map:
  memory: 0009fc00, [00000000, 0009fbff], type = 1.
  memory: 00000400, [0009fc00, 0009ffff], type = 2.
  memory: 00010000, [000f0000, 000fffff], type = 2.
  memory: 07efe000, [00100000, 07ffdfff], type = 1.
  memory: 00002000, [07ffe000, 07ffffff], type = 2.
  memory: 00040000, [fffc0000, ffffffff], type = 2.
check_alloc_page() succeeded!
check_pgdir() succeeded!
check_boot_pgdir() succeeded!
-------------------- BEGIN --------------------
PDE(0e0) c0000000-f8000000 38000000 urw
  |-- PTE(38000) c0000000-f8000000 38000000 -rw
PDE(001) fac00000-fb000000 00400000 -rw
  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
--------------------- END ---------------------
use SLOB allocator
kmalloc_init() succeeded!
check_vma_struct() succeeded!
page fault at 0x00000100: K/W [no page found].
check_pgfault() succeeded!
check_vmm() succeeded.
sched class: stride_scheduler
ide 0:      10000(sectors), 'QEMU HARDDISK'.
ide 1:     262144(sectors), 'QEMU HARDDISK'.
SWAP: manager = fifo swap manager
BEGIN check_swap: count 1, total 31827
setup Page Table for vaddr 0X1000, so alloc a page
setup Page Table vaddr 0~4MB OVER!
set up init env for check_swap begin!
page fault at 0x00001000: K/W [no page found].
page fault at 0x00002000: K/W [no page found].
page fault at 0x00003000: K/W [no page found].
page fault at 0x00004000: K/W [no page found].
set up init env for check_swap over!
write Virt Page c in fifo_check_swap
write Virt Page a in fifo_check_swap
write Virt Page d in fifo_check_swap
write Virt Page b in fifo_check_swap
write Virt Page e in fifo_check_swap
page fault at 0x00005000: K/W [no page found].
swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
write Virt Page b in fifo_check_swap
write Virt Page a in fifo_check_swap
page fault at 0x00001000: K/W [no page found].
swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
write Virt Page b in fifo_check_swap
page fault at 0x00002000: K/W [no page found].
swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
write Virt Page c in fifo_check_swap
page fault at 0x00003000: K/W [no page found].
swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
write Virt Page d in fifo_check_swap
page fault at 0x00004000: K/W [no page found].
swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
write Virt Page e in fifo_check_swap
page fault at 0x00005000: K/W [no page found].
swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
write Virt Page a in fifo_check_swap
page fault at 0x00001000: K/R [no page found].
swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
count is 0, total is 5
check_swap() succeeded!
++ setup timer interrupts
I am No.4 philosopher_condvar
Iter 1, No.4 philosopher_condvar is thinking
I am No.3 philosopher_condvar
Iter 1, No.3 philosopher_condvar is thinking
I am No.2 philosopher_condvar
Iter 1, No.2 philosopher_condvar is thinking
I am No.1 philosopher_condvar
Iter 1, No.1 philosopher_condvar is thinking
I am No.0 philosopher_condvar
Iter 1, No.0 philosopher_condvar is thinking
I am No.4 philosopher_sema
Iter 1, No.4 philosopher_sema is thinking
I am No.3 philosopher_sema
Iter 1, No.3 philosopher_sema is thinking
I am No.2 philosopher_sema
Iter 1, No.2 philosopher_sema is thinking
I am No.1 philosopher_sema
Iter 1, No.1 philosopher_sema is thinking
I am No.0 philosopher_sema
Iter 1, No.0 philosopher_sema is thinking
kernel_execve: pid = 2, name = "waitkill".
wait child 1.
child 2.
child 1.
Iter 1, No.0 philosopher_sema is eating
Iter 1, No.2 philosopher_sema is eating
phi_test_condvar: state_condvar[0] will eating
phi_test_condvar: signal self_cv[0] 
cond_signal begin: cvp c03a8688, cvp->count 0, cvp->owner->next_count 0
cond_signal end: cvp c03a8688, cvp->count 0, cvp->owner->next_count 0
Iter 1, No.0 philosopher_condvar is eating
phi_test_condvar: state_condvar[1] will waiting
cond_wait begin:  cvp c03a869c, cvp->count 0, cvp->owner->next_count 0
phi_test_condvar: state_condvar[2] will eating
phi_test_condvar: signal self_cv[2] 
cond_signal begin: cvp c03a86b0, cvp->count 0, cvp->owner->next_count 0
cond_signal end: cvp c03a86b0, cvp->count 0, cvp->owner->next_count 0
Iter 1, No.2 philosopher_condvar is eating
phi_test_condvar: state_condvar[3] will waiting
cond_wait begin:  cvp c03a86c4, cvp->count 0, cvp->owner->next_count 0
phi_test_condvar: state_condvar[4] will waiting
cond_wait begin:  cvp c03a86d8, cvp->count 0, cvp->owner->next_count 0
phi_test_condvar: state_condvar[3] will eating
phi_test_condvar: signal self_cv[3] 
cond_signal begin: cvp c03a86c4, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03a86c4, cvp->count 0, cvp->owner->next_count 1
Iter 1, No.3 philosopher_condvar is eating
Iter 2, No.2 philosopher_sema is thinking
Iter 1, No.3 philosopher_sema is eating
Iter 2, No.0 philosopher_sema is thinking
Iter 1, No.1 philosopher_sema is eating
cond_signal end: cvp c03a86c4, cvp->count 0, cvp->owner->next_count 0
Iter 2, No.2 philosopher_condvar is thinking
phi_test_condvar: state_condvar[1] will eating
phi_test_condvar: signal self_cv[1] 
cond_signal begin: cvp c03a869c, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03a869c, cvp->count 0, cvp->owner->next_count 1
Iter 1, No.1 philosopher_condvar is eating
Iter 2, No.1 philosopher_sema is thinking
Iter 2, No.0 philosopher_sema is eating
Iter 2, No.3 philosopher_sema is thinking
Iter 2, No.2 philosopher_sema is eating
cond_signal end: cvp c03a869c, cvp->count 0, cvp->owner->next_count 0
Iter 2, No.0 philosopher_condvar is thinking
Iter 2, No.1 philosopher_condvar is thinking
phi_test_condvar: state_condvar[4] will eating
phi_test_condvar: signal self_cv[4] 
cond_signal begin: cvp c03a86d8, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03a86d8, cvp->count 0, cvp->owner->next_count 1
Iter 1, No.4 philosopher_condvar is eating
Iter 3, No.2 philosopher_sema is thinking
Iter 2, No.3 philosopher_sema is eating
Iter 3, No.0 philosopher_sema is thinking
Iter 2, No.1 philosopher_sema is eating
cond_signal end: cvp c03a86d8, cvp->count 0, cvp->owner->next_count 0
Iter 2, No.3 philosopher_condvar is thinking
phi_test_condvar: state_condvar[2] will eating
phi_test_condvar: signal self_cv[2] 
cond_signal begin: cvp c03a86b0, cvp->count 0, cvp->owner->next_count 0
cond_signal end: cvp c03a86b0, cvp->count 0, cvp->owner->next_count 0
Iter 2, No.2 philosopher_condvar is eating
Iter 2, No.4 philosopher_condvar is thinking
Iter 3, No.1 philosopher_sema is thinking
Iter 3, No.0 philosopher_sema is eating
Iter 3, No.3 philosopher_sema is thinking
Iter 3, No.2 philosopher_sema is eating
phi_test_condvar: state_condvar[1] will waiting
cond_wait begin:  cvp c03a869c, cvp->count 0, cvp->owner->next_count 0
phi_test_condvar: state_condvar[0] will eating
phi_test_condvar: signal self_cv[0] 
cond_signal begin: cvp c03a8688, cvp->count 0, cvp->owner->next_count 0
cond_signal end: cvp c03a8688, cvp->count 0, cvp->owner->next_count 0
Iter 2, No.0 philosopher_condvar is eating
phi_test_condvar: state_condvar[4] will waiting
cond_wait begin:  cvp c03a86d8, cvp->count 0, cvp->owner->next_count 0
Iter 3, No.2 philosopher_condvar is thinking
phi_test_condvar: state_condvar[3] will eating
phi_test_condvar: signal self_cv[3] 
cond_signal begin: cvp c03a86c4, cvp->count 0, cvp->owner->next_count 0
cond_signal end: cvp c03a86c4, cvp->count 0, cvp->owner->next_count 0
Iter 2, No.3 philosopher_condvar is eating
kill parent ok.
Iter 4, No.2 philosopher_sema is thinking
Iter 3, No.3 philosopher_sema is eating
Iter 4, No.0 philosopher_sema is thinking
Iter 3, No.1 philosopher_sema is eating
Iter 3, No.3 philosopher_condvar is thinking
phi_test_condvar: state_condvar[4] will eating
phi_test_condvar: signal self_cv[4] 
cond_signal begin: cvp c03a86d8, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03a86d8, cvp->count 0, cvp->owner->next_count 1
Iter 2, No.4 philosopher_condvar is eating
Iter 4, No.1 philosopher_sema is thinking
Iter 4, No.0 philosopher_sema is eating
Iter 4, No.3 philosopher_sema is thinking
Iter 4, No.2 philosopher_sema is eating
cond_signal end: cvp c03a86d8, cvp->count 0, cvp->owner->next_count 0
phi_test_condvar: state_condvar[1] will eating
phi_test_condvar: signal self_cv[1] 
cond_signal begin: cvp c03a869c, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03a869c, cvp->count 0, cvp->owner->next_count 1
Iter 2, No.1 philosopher_condvar is eating
No.2 philosopher_sema quit
Iter 4, No.3 philosopher_sema is eating
No.0 philosopher_sema quit
Iter 4, No.1 philosopher_sema is eating
cond_signal end: cvp c03a869c, cvp->count 0, cvp->owner->next_count 0
Iter 3, No.0 philosopher_condvar is thinking
No.1 philosopher_sema quit
No.3 philosopher_sema quit
Iter 1, No.4 philosopher_sema is eating
phi_test_condvar: state_condvar[2] will waiting
cond_wait begin:  cvp c03a86b0, cvp->count 0, cvp->owner->next_count 0
Iter 3, No.4 philosopher_condvar is thinking
phi_test_condvar: state_condvar[3] will eating
phi_test_condvar: signal self_cv[3] 
cond_signal begin: cvp c03a86c4, cvp->count 0, cvp->owner->next_count 0
cond_signal end: cvp c03a86c4, cvp->count 0, cvp->owner->next_count 0
Iter 3, No.3 philosopher_condvar is eating
Iter 3, No.1 philosopher_condvar is thinking
phi_test_condvar: state_condvar[0] will eating
phi_test_condvar: signal self_cv[0] 
cond_signal begin: cvp c03a8688, cvp->count 0, cvp->owner->next_count 0
cond_signal end: cvp c03a8688, cvp->count 0, cvp->owner->next_count 0
Iter 3, No.0 philosopher_condvar is eating
Iter 2, No.4 philosopher_sema is thinking
kill child1 ok.
Iter 4, No.0 philosopher_condvar is thinking
phi_test_condvar: state_condvar[1] will eating
phi_test_condvar: signal self_cv[1] 
cond_signal begin: cvp c03a869c, cvp->count 0, cvp->owner->next_count 0
cond_signal end: cvp c03a869c, cvp->count 0, cvp->owner->next_count 0
Iter 3, No.1 philosopher_condvar is eating
Iter 4, No.3 philosopher_condvar is thinking
phi_test_condvar: state_condvar[4] will eating
phi_test_condvar: signal self_cv[4] 
cond_signal begin: cvp c03a86d8, cvp->count 0, cvp->owner->next_count 0
cond_signal end: cvp c03a86d8, cvp->count 0, cvp->owner->next_count 0
Iter 3, No.4 philosopher_condvar is eating
Iter 2, No.4 philosopher_sema is eating
phi_test_condvar: state_condvar[0] will waiting
cond_wait begin:  cvp c03a8688, cvp->count 0, cvp->owner->next_count 0
Iter 4, No.4 philosopher_condvar is thinking
phi_test_condvar: state_condvar[0] will eating
phi_test_condvar: signal self_cv[0] 
cond_signal begin: cvp c03a8688, cvp->count 1, cvp->owner->next_count 0
Iter 3, No.4 philosopher_sema is thinking
cond_wait end:  cvp c03a8688, cvp->count 0, cvp->owner->next_count 1
Iter 4, No.0 philosopher_condvar is eating
cond_signal end: cvp c03a8688, cvp->count 0, cvp->owner->next_count 0
phi_test_condvar: state_condvar[2] will eating
phi_test_condvar: signal self_cv[2] 
cond_signal begin: cvp c03a86b0, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03a86b0, cvp->count 0, cvp->owner->next_count 1
Iter 3, No.2 philosopher_condvar is eating
cond_signal end: cvp c03a86b0, cvp->count 0, cvp->owner->next_count 0
Iter 4, No.1 philosopher_condvar is thinking
phi_test_condvar: state_condvar[3] will waiting
cond_wait begin:  cvp c03a86c4, cvp->count 0, cvp->owner->next_count 0
phi_test_condvar: state_condvar[1] will waiting
cond_wait begin:  cvp c03a869c, cvp->count 0, cvp->owner->next_count 0
phi_test_condvar: state_condvar[4] will waiting
cond_wait begin:  cvp c03a86d8, cvp->count 0, cvp->owner->next_count 0
phi_test_condvar: state_condvar[3] will eating
phi_test_condvar: signal self_cv[3] 
cond_signal begin: cvp c03a86c4, cvp->count 1, cvp->owner->next_count 0
Iter 3, No.4 philosopher_sema is eating
cond_wait end:  cvp c03a86c4, cvp->count 0, cvp->owner->next_count 1
Iter 4, No.3 philosopher_condvar is eating
cond_signal end: cvp c03a86c4, cvp->count 0, cvp->owner->next_count 0
Iter 4, No.2 philosopher_condvar is thinking
phi_test_condvar: state_condvar[1] will eating
phi_test_condvar: signal self_cv[1] 
cond_signal begin: cvp c03a869c, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03a869c, cvp->count 0, cvp->owner->next_count 1
Iter 4, No.1 philosopher_condvar is eating
cond_signal end: cvp c03a869c, cvp->count 0, cvp->owner->next_count 0
No.0 philosopher_condvar quit
Iter 4, No.4 philosopher_sema is thinking
No.1 philosopher_condvar quit
phi_test_condvar: state_condvar[4] will eating
phi_test_condvar: signal self_cv[4] 
cond_signal begin: cvp c03a86d8, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03a86d8, cvp->count 0, cvp->owner->next_count 1
Iter 4, No.4 philosopher_condvar is eating
cond_signal end: cvp c03a86d8, cvp->count 0, cvp->owner->next_count 0
No.3 philosopher_condvar quit
phi_test_condvar: state_condvar[2] will eating
phi_test_condvar: signal self_cv[2] 
cond_signal begin: cvp c03a86b0, cvp->count 0, cvp->owner->next_count 0
cond_signal end: cvp c03a86b0, cvp->count 0, cvp->owner->next_count 0
Iter 4, No.2 philosopher_condvar is eating
No.2 philosopher_condvar quit
No.4 philosopher_condvar quit
Iter 4, No.4 philosopher_sema is eating
No.4 philosopher_sema quit
all user-mode processes have quit.
init check memory pass.
kernel panic at kern/process/proc.c:498:
    initproc exit.

stack trackback:
ebp:c03aaf88 eip:c0100af0 args: 0xc010da20 0xc03aafcc 0x000001f2 0xc03aafb8 
    kern/debug/kdebug.c:351: print_stackframe+21
ebp:c03aafb8 eip:c0100e5c args: 0xc010fc44 0x000001f2 0xc010fc96 0x00000000 
    kern/debug/panic.c:27: __panic+105
ebp:c03aafe8 eip:c010af5c args: 0x00000000 0x00000000 0x00000000 0x00000010 
    kern/process/proc.c:498: do_exit+91
Welcome to the kernel debug monitor!!
Type 'help' for a list of commands.
K> 